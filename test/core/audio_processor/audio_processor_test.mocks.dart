// Mocks generated by Mockito 5.4.4 from annotations
// in mesmerizr/test/core/audio_processor/audio_processor_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:typed_data' as _i4;

import 'package:mesmerizr/core/noise_processor/noise_processor.dart' as _i2;
import 'package:mesmerizr/core/parameters/noise_generator_parameters.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NoiseProcessor].
///
/// See the documentation for Mockito's code generation for more information.
class MockNoiseProcessor extends _i1.Mock implements _i2.NoiseProcessor {
  MockNoiseProcessor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i4.Uint8List> get noiseStream => (super.noSuchMethod(
        Invocation.getter(#noiseStream),
        returnValue: _i3.Stream<_i4.Uint8List>.empty(),
      ) as _i3.Stream<_i4.Uint8List>);

  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isGenerating => (super.noSuchMethod(
        Invocation.getter(#isGenerating),
        returnValue: false,
      ) as bool);

  @override
  _i3.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> startGeneratingNoise() => (super.noSuchMethod(
        Invocation.method(
          #startGeneratingNoise,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> stopGeneratingNoise() => (super.noSuchMethod(
        Invocation.method(
          #stopGeneratingNoise,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateNoiseParameters(
          _i5.NoiseGeneratorParameters? parameters) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateNoiseParameters,
          [parameters],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
